<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Comment</key>
	<string>Created with Recipe Robot v2.3.1 (https://github.com/homebysix/recipe-robot)</string>
	<key>Description</key>
	<string>Downloads the latest version of Privileges and imports it into Munki.</string>
	<key>Identifier</key>
	<string>com.github.peetinc.munki.privileges</string>
	<key>Input</key>
	<dict>
		<key>DERIVE_MIN_OS</key>
		<string>YES</string>
		<key>INSTALLED_APP</key>
		<string>/Applications/Privileges.app</string>
		<key>MUNKI_CATEGORY</key>
		<string>Security</string>
		<key>MUNKI_DEVELOPER</key>
		<string>SAP SE</string>
		<key>MUNKI_DISPLAYNAME</key>
		<string>Privileges</string>
		<key>MUNKI_REPO_SUBDIR</key>
		<string>apps/%NAME%</string>
		<key>NAME</key>
		<string>Privileges</string>
		<key>pkginfo</key>
		<dict>
			<key>blocking_applications</key>
			<array/>
			<key>catalogs</key>
			<array>
				<string>testing</string>
			</array>
			<key>category</key>
			<string>%MUNKI_CATEGORY%</string>
			<key>description</key>
			<string>For Mac users in enterprise environments, this application gives users control over the administration of their machine by elevating their level of access to administrator privileges on macOS.  Users can set a timeframe in the application's settings to perform specific tasks, such as installing or removing an application.</string>
			<key>developer</key>
			<string>%MUNKI_DEVELOPER%</string>
			<key>display_name</key>
			<string>%MUNKI_DISPLAYNAME%</string>
			<key>name</key>
			<string>%NAME%</string>
			<key>unattended_install</key>
			<true/>
			<key>uninstall_method</key>
		<string>uninstall_script</string>
		<key>uninstall_script</key>
		<string>#!/bin/bash
loggedInUser=$( scutil &lt;&lt;&lt; "show State:/Users/ConsoleUser" | awk '/Name :/ &amp;&amp; ! /loginwindow/ { print $3 }' )
loggedInUID=$(id -u $loggedInUser)

if [[ -f "/Library/LaunchDaemons/corp.sap.privileges.helper.plist" ]]; then
    launchctl unload "/Library/LaunchDaemons/corp.sap.privileges.helper.plist" &gt;&gt; /dev/null 2&gt;&amp;1 
    rm -rf "/Library/LaunchDaemons/corp.sap.privileges.helper.plist"
    rm -rf "/Library/PrivilegedHelperTools/corp.sap.privileges.helper"
fi

launchctl asuser $loggedInUID launchctl unload  "/Library/LaunchAgents/corp.sap.privileges.agent.plist" &gt;&gt; /dev/null 2&gt;&amp;1 
rm -rf "/Library/LaunchAgents/corp.sap.privileges.agent.plist"

launchctl unload  "/Library/LaunchDaemons/corp.sap.privileges.daemon.plist" &gt;&gt; /dev/null 2&gt;&amp;1 
rm -rf "/Library/LaunchDaemons/corp.sap.privileges.daemon.plist"

rm -rf "/Applications/Privileges.app"
rm -rf "/Library/Preferences/corp.sap.PrivilegesDaemon.plist"
rm -rf "/Library/Scripts/VoiceOver/Privileges Time Left.scpt"
rm -rf "/private/etc/paths.d/PrivilegesCLI"

pkgutil --forget com.sap.privileges
		</string>
		</dict>
	</dict>
	<key>MinimumVersion</key>
	<string>2.3</string>
	<key>ParentRecipe</key>
	<string>com.github.rtrouton.download.privileges</string>
	<key>Process</key>
	<array>
		<dict>
            <key>Arguments</key>
            <dict>
                <key>flat_pkg_path</key>
                <string>%pathname%</string>
                <key>destination_path</key>
                <string>%RECIPE_CACHE_DIR%/%NAME%_pkg</string>
                <key>purge_destination</key>
                <true/>
            </dict>
            <key>Processor</key>
            <string>FlatPkgUnpacker</string>
        </dict>
        <dict>
            <key>Arguments</key>
            <dict>
                <key>pkg_payload_path</key>
                <string>%RECIPE_CACHE_DIR%/%NAME%_pkg/%NAME%.pkg/Payload</string>
                <key>destination_path</key>
                <string>%RECIPE_CACHE_DIR%/%NAME%_pkg_payload</string>
                <key>purge_destination</key>
                <true/>
            </dict>
            <key>Processor</key>
            <string>PkgPayloadUnpacker</string>
        </dict>
        <dict>
            <key>Arguments</key>
            <dict>
            	<key>derive_minimum_os_version</key>
                <string>%DERIVE_MIN_OS%</string>
                <key>faux_root</key>
                <string>%RECIPE_CACHE_DIR%/%NAME%_pkg_payload</string>
                <key>installs_item_paths</key>
                <array>
                    <string>%INSTALLED_APP%</string>
                </array>
            </dict>
            <key>Processor</key>
            <string>MunkiInstallsItemsCreator</string>
        </dict>
         <dict>
			<key>Arguments</key>
			<dict/>
			<key>Processor</key>
            <string>MunkiPkginfoMerger</string>
        </dict>
		<dict>
			<key>Arguments</key>
			<dict>
				<key>pkg_path</key>
				<string>%pathname%</string>
				<key>repo_subdirectory</key>
				<string>%MUNKI_REPO_SUBDIR%</string>
			</dict>
			<key>Processor</key>
			<string>MunkiImporter</string>
		</dict>
	</array>
</dict>
</plist>
